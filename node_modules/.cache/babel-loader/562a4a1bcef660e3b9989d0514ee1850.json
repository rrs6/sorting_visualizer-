{"ast":null,"code":"var _jsxFileName = \"/home/rrs6/Desktop/reactprojects/sorting_visualizer/src/components/GraphComponent.jsx\";\nimport './GraphComponentStyle.css';\nimport React from 'react';\nimport { getBubbleSort } from '../bubble/Bubble';\nimport { getSelectionSort } from '../selection/Selection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet sort = false;\n\nclass GraphComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numbers: [],\n      numOfBars: 5\n    };\n  }\n\n  selectionSort() {\n    // // const colorInitial = 'rgba(255, 0, 13, 0.8)';\n    // // const colorSelectionSort = 'rgba(45, 45, 45, 0.98)';\n    // // const colorSorted = 'rgba(8, 156, 249, 0.8)';\n    // sort = true;\n    // let i = 0;\n    // let maxV = 0;\n    // let idxMax = 0;\n    // let j = 0;\n    // const bars = document.getElementsByClassName('bar');\n    // //bars[0].style.backgroundColor = 'rgba(45, 45, 45, 0.98)';\n    // let interv = setInterval(() => {\n    //     if(i>=bars.length){\n    //         clearInterval(interv);\n    //     }else{\n    //         if(j>=bars.length-i){\n    //             let value = this.state.numbers[bars.length-1-i];\n    //             let arrayAux = this.state.numbers.slice();\n    //             arrayAux[idxMax] = value;\n    //             arrayAux[bars.length-1-i] = maxV;\n    //             this.setState({\n    //                 numbers: arrayAux,\n    //             })\n    //             bars[idxMax].style.backgroundColor = 'red';\n    //             bars[bars.length-1-i].style.backgroundColor = 'red';\n    //             j=0;\n    //             i++;\n    //             maxV = 0;\n    //             idxMax = 0;\n    //         }else{\n    //             console.log(idxMax);\n    //             if(maxV<this.state.numbers[j]){\n    //                 bars[idxMax].style.backgroundColor = 'red';\n    //                 idxMax = j;\n    //                 //bars[idxMax].style.backgroundColor = 'rgba(45, 45, 45, 0.98)';\n    //                 maxV = this.state.numbers[j];\n    //                 bars[idxMax].style.backgroundColor = 'rgba(45, 45, 45, 0.98)';\n    //             }else{\n    //                 bars[j].style.backgroundColor = 'rgba(8, 156, 249, 0.8)';\n    //             }\n    //             if(j-1>=0&&j-1!==idxMax)\n    //                 bars[j-1].style.backgroundColor = 'red';\n    //             j++;\n    //         }\n    //     }\n    // }, 1*(i+1))\n    console.log(getSelectionSort());\n  }\n\n  bubbleSort() {\n    sort = true;\n    let [animations] = getBubbleSort(this.state.numbers);\n\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n      const arrayBars = document.getElementsByClassName('bar');\n\n      if (isColorChange) {\n        const color = i % 4 === 0 ? 'black' : 'red';\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * 1);\n      } else {\n        const [barIdx, newHeight] = animations[i];\n\n        if (barIdx === -1) {\n          continue;\n        }\n\n        const barStyle = arrayBars[barIdx].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}%`;\n        }, i * 1);\n      }\n    }\n  }\n\n  initializeNumbers() {\n    let nums = [];\n\n    for (let i = 0; i < this.state.numOfBars; i++) {\n      nums.push(Math.floor(Math.abs(Math.random() - Math.random()) * 100) + 1);\n    }\n\n    this.setState({\n      numbers: nums\n    });\n    console.log(sort);\n\n    if (sort) {\n      for (let i = 0; i < this.state.numOfBars; i++) document.getElementsByClassName('bar')[i].style.backgroundColor = 'red';\n\n      sort = false;\n    }\n  }\n\n  componentDidMount() {\n    this.initializeNumbers();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bars\",\n        children: this.state.numbers.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          style: {\n            height: value + '%',\n            width: 100 / this.props.numOfBars + '%',\n            background: 'red'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 64\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-numbars\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"range\",\n          min: \"5\",\n          max: \"300\",\n          value: this.state.numOfBars,\n          onChange: e => {\n            this.setState({\n              numOfBars: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-text\",\n          children: [\"Number of elements: \", this.state.numOfBars]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.initializeNumbers(),\n          className: \"button-newRandom\",\n          children: \"Reset Array\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.selectionSort(),\n          className: \"button-sort\",\n          children: \"Selection Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.bubbleSort(),\n          className: \"button-sort\",\n          children: \"Bubble Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GraphComponent;","map":{"version":3,"names":["React","getBubbleSort","getSelectionSort","sort","GraphComponent","Component","constructor","state","numbers","numOfBars","selectionSort","console","log","bubbleSort","animations","i","length","isColorChange","arrayBars","document","getElementsByClassName","color","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","barIdx","newHeight","barStyle","height","initializeNumbers","nums","push","Math","floor","abs","random","setState","componentDidMount","render","map","value","index","width","props","background","e","target"],"sources":["/home/rrs6/Desktop/reactprojects/sorting_visualizer/src/components/GraphComponent.jsx"],"sourcesContent":["import './GraphComponentStyle.css';\nimport React from 'react';\nimport {getBubbleSort} from '../bubble/Bubble';\nimport {getSelectionSort} from '../selection/Selection';\nlet sort = false;\nclass GraphComponent extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            numbers: [],\n            numOfBars: 5,\n        }\n    }\n    selectionSort(){\n        // // const colorInitial = 'rgba(255, 0, 13, 0.8)';\n        // // const colorSelectionSort = 'rgba(45, 45, 45, 0.98)';\n        // // const colorSorted = 'rgba(8, 156, 249, 0.8)';\n        // sort = true;\n        // let i = 0;\n        // let maxV = 0;\n        // let idxMax = 0;\n        // let j = 0;\n        // const bars = document.getElementsByClassName('bar');\n        // //bars[0].style.backgroundColor = 'rgba(45, 45, 45, 0.98)';\n        // let interv = setInterval(() => {\n        //     if(i>=bars.length){\n        //         clearInterval(interv);\n        //     }else{\n        //         if(j>=bars.length-i){\n        //             let value = this.state.numbers[bars.length-1-i];\n        //             let arrayAux = this.state.numbers.slice();\n        //             arrayAux[idxMax] = value;\n        //             arrayAux[bars.length-1-i] = maxV;\n        //             this.setState({\n        //                 numbers: arrayAux,\n        //             })\n        //             bars[idxMax].style.backgroundColor = 'red';\n        //             bars[bars.length-1-i].style.backgroundColor = 'red';\n        //             j=0;\n        //             i++;\n        //             maxV = 0;\n        //             idxMax = 0;\n        //         }else{\n        //             console.log(idxMax);\n        //             if(maxV<this.state.numbers[j]){\n        //                 bars[idxMax].style.backgroundColor = 'red';\n        //                 idxMax = j;\n        //                 //bars[idxMax].style.backgroundColor = 'rgba(45, 45, 45, 0.98)';\n        //                 maxV = this.state.numbers[j];\n        //                 bars[idxMax].style.backgroundColor = 'rgba(45, 45, 45, 0.98)';\n        //             }else{\n        //                 bars[j].style.backgroundColor = 'rgba(8, 156, 249, 0.8)';\n        //             }\n        //             if(j-1>=0&&j-1!==idxMax)\n        //                 bars[j-1].style.backgroundColor = 'red';\n        //             j++;\n        //         }\n        //     }\n        // }, 1*(i+1))\n        console.log(getSelectionSort());\n    }\n    bubbleSort(){\n        sort = true;\n        let [animations] = getBubbleSort(this.state.numbers);\n        for(let i = 0; i < animations.length; i++){\n            const isColorChange = ((i%4===0)||(i%4===1));\n            const arrayBars = document.getElementsByClassName('bar');\n            if(isColorChange){\n                const color = (i%4===0) ? 'black' : 'red';\n                const [barOneIdx, barTwoIdx] = animations[i];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i*1);\n            }else{\n                const [barIdx, newHeight] = animations[i];\n                if(barIdx===-1){\n                    continue;\n                }\n                const barStyle = arrayBars[barIdx].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}%`;\n                }, i*1);\n            }\n        }\n    }\n    initializeNumbers(){\n        let nums = [];\n        for(let i = 0; i < this.state.numOfBars; i++){\n            nums.push(Math.floor(Math.abs(Math.random()-Math.random())*(100))+1)\n        }\n        this.setState({\n            numbers: nums,\n        });\n        console.log(sort);\n        if(sort){\n            for(let i = 0; i < this.state.numOfBars; i++)\n                document.getElementsByClassName('bar')[i].style.backgroundColor = 'red';\n            sort = false;\n        }\n    }\n    componentDidMount(){\n        this.initializeNumbers();\n    }\n    render(){\n        return (\n            <div className='container'>\n                <div className=\"bars\">\n                    {this.state.numbers.map((value, index) => (<div className=\"bar\" style={{height:((value))+'%', width:(100/this.props.numOfBars)+'%', background: 'red'}} key={index}></div>))}\n                </div>\n                <div className=\"input-numbars\">\n                    <input className=\"input\" type='range' min='5' max='300' value={this.state.numOfBars} onChange={(e) => {this.setState({numOfBars:e.target.value});}}></input>\n                    <p className=\"input-text\">Number of elements: {this.state.numOfBars}</p>\n                </div>\n                <div className=\"button-area\">\n                    <button onClick={()=>this.initializeNumbers()}className=\"button-newRandom\">Reset Array</button>\n                    <button onClick={()=>this.selectionSort()}className=\"button-sort\">Selection Sort</button>\n                    <button onClick={()=>this.bubbleSort()}className=\"button-sort\">Bubble Sort</button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default GraphComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}